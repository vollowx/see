:host {
  --_unchecked-outline-color: var(--md-sys-color-outline);
  --_checked-outline-color: var(--md-sys-color-primary);
  --_unchecked-track-color: var(--md-sys-color-surface-container-highest);
  --_checked-track-color: var(--md-sys-color-primary);
  --_unchecked-thumb-color: var(--md-sys-color-outline);
  --_checked-thumb-color: var(--md-sys-color-on-primary);
  --_unchecked-icon-color: var(--md-sys-color-surface-container-highest);
  --_checked-icon-color: var(--md-sys-color-on-primary-container);
  --_unchecked-ripple-color: var(--md-sys-color-on-surface);
  --_checked-ripple-color: var(--md-sys-color-primary);
  -webkit-tap-highlight-color: transparent;
  cursor: pointer;
  display: inline-flex;
  align-items: center;
  gap: 8px;
  outline: 0;
  position: relative;
  vertical-align: top;
  user-select: none;
  touch-action: none;
}
@media (forced-colors: active) {
  :host {
    forced-color-adjust: none;
  }
}
@media (hover: hover) and (pointer: fine) {
  :host(:hover) {
    --_unchecked-thumb-color: var(--md-sys-color-on-surface-variant);
    --_checked-thumb-color: var(--md-sys-color-primary-container);
  }
}
:host([disabled]) {
  --_unchecked-outline-color: var(--md-sys-color-on-surface);
  --_checked-outline-color: var(--md-sys-color-surface);
  --_unchecked-track-color: var(--md-sys-color-surface-variant);
  --_checked-track-color: var(--md-sys-color-on-surface);
  --_unchecked-thumb-color: var(--md-sys-color-on-surface);
  --_checked-thumb-color: var(--md-sys-color-surface);
  --_unchecked-icon-color: var(--md-sys-color-surface-container-highest);
  --_checked-icon-color: var(--md-sys-color-on-surface);
  cursor: default;
  pointer-events: none;
}

[part~='switch'] {
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
}

[part~='track'] {
  background-color: var(--_unchecked-track-color);
  border: 2px solid var(--_unchecked-outline-color);
  border-radius: 50px;
  height: 32px;
  position: initial;
  transition: background-color var(--md-sys-motion-overshoot) 300ms;
  width: 52px;
  box-sizing: border-box;
  display: block;
}
:host([checked]) [part~='track'] {
  background-color: var(--_checked-track-color);
  border-color: var(--_checked-outline-color);
}
:host([disabled]) [part~='track'] {
  opacity: 0.12;
}

[part~='thumb'] {
  --_thumb-diameter: 16px;
  --_thumb-center-edge-distance_: 16px;
  --_thumb-diff-default: 20px;
  --_thumb-diff-pointer: 0px;
  background-color: var(--_unchecked-thumb-color);
  border-radius: 50%;
  display: block;
  width: var(--_thumb-diameter);
  height: var(--_thumb-diameter);
  position: absolute;
  transition:
    background-color 67ms linear,
    width 250ms var(--md-sys-motion-easing-standard),
    height 250ms var(--md-sys-motion-easing-standard),
    margin 300ms var(--md-sys-motion-overshoot);
  z-index: 1;
  margin-inline-start: calc(
    var(--_thumb-diff-pointer) - var(--_thumb-diff-default)
  );
}
:host([checked]) [part~='thumb'] {
  --_thumb-diameter: 24px;
  --_thumb-diff-default: -20px;
  background-color: var(--_checked-thumb-color);
}
:host([disabled]) [part~='thumb'] {
  opacity: 0.38;
}
:host([disabled][checked]) [part~='thumb'] {
  opacity: 1;
}
:host([icons]:not([checkedicononly])) [part~='thumb'] {
  --_thumb-diameter: 24px;
}
:host(:active) [part~='thumb'] {
  --_thumb-diameter: 28px !important;
  --_unchecked-thumb-color: var(--md-sys-color-on-surface-variant);
}
:host([checked]:active) [part~='thumb'] {
  --_checked-thumb-color: var(--md-sys-color-primary-container);
}

[part~='icons'] {
  position: absolute;
  inset: 0;
  margin: auto;
  width: 16px;
  height: 16px;
  fill: var(--_unchecked-icon-color);
  transition:
    fill 67ms linear,
    opacity 33ms linear;
  opacity: 0;
}
:host([checked]) [part~='icons'] {
  fill: var(--_checked-icon-color);
}
:host([icons]:not([checked]):not([checkedicononly])) [part~='icon-off'] {
  opacity: 1;
}
:host([icons][checked]) [part~='icon-on'] {
  opacity: 1;
}
:host([icons][disabled][checked]) [part~='icon-on'] {
  opacity: 0.38;
}

[part~='state-layer'] {
  /* Using `left` and `top` instead of `transform` is because `transform` will make state layers shake */
  left: calc(var(--_thumb-diameter) / 2);
  top: calc(var(--_thumb-diameter) / 2);
  width: 40px;
  height: 40px;
  color: var(--_unchecked-ripple-color);
  transform: translate(-50%, -50%);
  transition:
    color 67ms linear,
    left 250ms var(--md-sys-motion-easing-standard),
    top 250ms var(--md-sys-motion-easing-standard);
}
:host([checked]) [part~='state-layer'] {
  color: var(--_checked-ripple-color);
}
